{"name":"Validate book creation with invalid price values","id":"books-api-crud-operations;validate-book-creation-with-invalid-price-values","scenarioId":"BooksAPICRUD:Validate book creation with invalid price values","methodName":"Validate book creation with invalid price values","testSteps":[{"number":1,"description":"1: Validate book creation with invalid price values ({name\u003dBook A, author\u003dAuthor A, publication\u003dPublisher A, category\u003dFiction, pages\u003d200, price\u003dABC})","duration":1486,"startTime":"2025-03-30T00:05:26.035699+05:30[Asia/Kolkata]","result":"SUCCESS","precondition":false,"level":0,"lineNumber":49,"children":[{"number":2,"description":"Given User tries to create a book with the following details:\n| name | author | publication | category | pages | price |\n| Book A | Author A | Publisher A | Fiction | 200 | ABC |","duration":2,"startTime":"2025-03-30T00:05:26.035935+05:30[Asia/Kolkata]","result":"SUCCESS","precondition":false,"level":1},{"number":3,"description":"When User submits the request to create a book","duration":1482,"startTime":"2025-03-30T00:05:26.038738+05:30[Asia/Kolkata]","result":"SUCCESS","precondition":false,"level":1,"children":[{"number":4,"description":"POST http://77.102.250.113:17354/api/v1/books","duration":0,"startTime":"2025-03-30T00:05:27.519137+05:30[Asia/Kolkata]","result":"SUCCESS","restQuery":{"method":"POST","path":"http://77.102.250.113:17354/api/v1/books","content":"{\n    \"testCaseName\": null,\n    \"id\": 0,\n    \"name\": \"Book A\",\n    \"author\": \"Author A\",\n    \"publication\": \"Publisher A\",\n    \"category\": \"Fiction\",\n    \"pages\": \"200\",\n    \"price\": \"ABC\"\n}","contentType":"application/json","requestHeaders":"Accept\u003d*/*\n\t\t\t\tContent-Type\u003dapplication/json","requestCookies":"","responseHeaders":"Set-Cookie: JSESSIONID\u003d3CD7A0D2758DF0BD304938748EB5F472; Path\u003d/; HttpOnly\nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode\u003dblock\nCache-Control: no-cache, no-store, max-age\u003d0, must-revalidate\nPragma: no-cache\nExpires: 0\nX-Frame-Options: DENY\nContent-Type: application/json\nTransfer-Encoding: chunked\nDate: Sat, 29 Mar 2025 18:35:26 GMT\nConnection: close","responseCookies":"JSESSIONID\u003d3CD7A0D2758DF0BD304938748EB5F472;Path\u003d/;HttpOnly","responseBody":"{\n    \"timestamp\": \"2025-03-29T18:35:27.368+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/api/v1/books\"\n}","statusCode":400},"precondition":false,"level":2}]},{"number":5,"description":"Then The response status code should be 400","duration":0,"startTime":"2025-03-30T00:05:27.521622+05:30[Asia/Kolkata]","result":"SUCCESS","precondition":false,"level":1}]},{"number":6,"description":"2: Validate book creation with invalid price values ({name\u003dBook B, author\u003dAuthor B, publication\u003dPublisher B, category\u003dNon-Fiction, pages\u003d300, price\u003d-10})","duration":1359,"startTime":"2025-03-30T00:05:27.530920+05:30[Asia/Kolkata]","result":"FAILURE","precondition":false,"level":0,"lineNumber":50,"children":[{"number":7,"description":"Given User tries to create a book with the following details:\n| name | author | publication | category | pages | price |\n| Book B | Author B | Publisher B | Non-Fiction | 300 | -10 |","duration":0,"startTime":"2025-03-30T00:05:27.531376+05:30[Asia/Kolkata]","result":"SUCCESS","precondition":false,"level":1},{"number":8,"description":"When User submits the request to create a book","duration":1350,"startTime":"2025-03-30T00:05:27.532518+05:30[Asia/Kolkata]","result":"SUCCESS","precondition":false,"level":1,"children":[{"number":9,"description":"POST http://77.102.250.113:17354/api/v1/books","duration":0,"startTime":"2025-03-30T00:05:28.881267+05:30[Asia/Kolkata]","result":"SUCCESS","restQuery":{"method":"POST","path":"http://77.102.250.113:17354/api/v1/books","content":"{\n    \"testCaseName\": null,\n    \"id\": 0,\n    \"name\": \"Book B\",\n    \"author\": \"Author B\",\n    \"publication\": \"Publisher B\",\n    \"category\": \"Non-Fiction\",\n    \"pages\": \"300\",\n    \"price\": \"-10\"\n}","contentType":"application/json","requestHeaders":"Accept\u003d*/*\n\t\t\t\tContent-Type\u003dapplication/json","requestCookies":"","responseHeaders":"Set-Cookie: JSESSIONID\u003d4573E78575F52EC46C4801FE6CDD543B; Path\u003d/; HttpOnly\nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode\u003dblock\nCache-Control: no-cache, no-store, max-age\u003d0, must-revalidate\nPragma: no-cache\nExpires: 0\nX-Frame-Options: DENY\nContent-Type: application/json\nTransfer-Encoding: chunked\nDate: Sat, 29 Mar 2025 18:35:28 GMT\nKeep-Alive: timeout\u003d60\nConnection: keep-alive","responseCookies":"JSESSIONID\u003d4573E78575F52EC46C4801FE6CDD543B;Path\u003d/;HttpOnly","responseBody":"{\n    \"id\": 7835,\n    \"name\": \"Book B\",\n    \"author\": \"Author B\",\n    \"publication\": \"Publisher B\",\n    \"category\": \"Non-Fiction\",\n    \"pages\": 300,\n    \"price\": -10.0\n}","statusCode":200},"precondition":false,"level":2}]},{"number":10,"description":"Then The response status code should be 400","duration":4,"startTime":"2025-03-30T00:05:28.884071+05:30[Asia/Kolkata]","exception":{"errorType":"java.lang.AssertionError","message":"Response code mismatch expected:\u003c400\u003e but was:\u003c200\u003e","stackTrace":[{"declaringClass":"steps.BookAPISteps","methodName":"verifyResponseCode","fileName":"BookAPISteps.java","lineNumber":133},{"declaringClass":"stepdefinitions.BookStepDefinitions","methodName":"theResponseStatusCodeShouldBe","fileName":"BookStepDefinitions.java","lineNumber":103},{"declaringClass":"âœ½","methodName":"The response status code should be 400","fileName":"file:///Users/bharathpalanisamy/Documents/BooksAPITestAutomation/src/test/resources/features/BooksAPICRUD.feature","lineNumber":45}]},"result":"FAILURE","precondition":false,"level":1}]},{"number":11,"description":"3: Validate book creation with invalid price values ({name\u003dBook C, author\u003dAuthor C, publication\u003dPublisher C, category\u003dNon-Fiction, pages\u003d300, price\u003d8,698})","duration":1397,"startTime":"2025-03-30T00:05:28.901442+05:30[Asia/Kolkata]","result":"SUCCESS","precondition":false,"level":0,"lineNumber":51,"children":[{"number":12,"description":"Given User tries to create a book with the following details:\n| name | author | publication | category | pages | price |\n| Book C | Author C | Publisher C | Non-Fiction | 300 | 8,698 |","duration":0,"startTime":"2025-03-30T00:05:28.901930+05:30[Asia/Kolkata]","result":"SUCCESS","precondition":false,"level":1},{"number":13,"description":"When User submits the request to create a book","duration":1393,"startTime":"2025-03-30T00:05:28.903110+05:30[Asia/Kolkata]","result":"SUCCESS","precondition":false,"level":1,"children":[{"number":14,"description":"POST http://77.102.250.113:17354/api/v1/books","duration":0,"startTime":"2025-03-30T00:05:30.295065+05:30[Asia/Kolkata]","result":"SUCCESS","restQuery":{"method":"POST","path":"http://77.102.250.113:17354/api/v1/books","content":"{\n    \"testCaseName\": null,\n    \"id\": 0,\n    \"name\": \"Book C\",\n    \"author\": \"Author C\",\n    \"publication\": \"Publisher C\",\n    \"category\": \"Non-Fiction\",\n    \"pages\": \"300\",\n    \"price\": \"8,698\"\n}","contentType":"application/json","requestHeaders":"Accept\u003d*/*\n\t\t\t\tContent-Type\u003dapplication/json","requestCookies":"","responseHeaders":"Set-Cookie: JSESSIONID\u003d1BA6CD8030130504C68528AF10186CCC; Path\u003d/; HttpOnly\nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode\u003dblock\nCache-Control: no-cache, no-store, max-age\u003d0, must-revalidate\nPragma: no-cache\nExpires: 0\nX-Frame-Options: DENY\nContent-Type: application/json\nTransfer-Encoding: chunked\nDate: Sat, 29 Mar 2025 18:35:29 GMT\nConnection: close","responseCookies":"JSESSIONID\u003d1BA6CD8030130504C68528AF10186CCC;Path\u003d/;HttpOnly","responseBody":"{\n    \"timestamp\": \"2025-03-29T18:35:30.256+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/api/v1/books\"\n}","statusCode":400},"precondition":false,"level":2}]},{"number":15,"description":"Then The response status code should be 400","duration":0,"startTime":"2025-03-30T00:05:30.297754+05:30[Asia/Kolkata]","result":"SUCCESS","precondition":false,"level":1}]},{"number":16,"description":"4: Validate book creation with invalid price values ({name\u003dBook D, author\u003dAuthor D, publication\u003dPublisher D, category\u003dScience, pages\u003d250, price\u003d$50})","duration":1410,"startTime":"2025-03-30T00:05:30.309253+05:30[Asia/Kolkata]","result":"SUCCESS","precondition":false,"level":0,"lineNumber":52,"children":[{"number":17,"description":"Given User tries to create a book with the following details:\n| name | author | publication | category | pages | price |\n| Book D | Author D | Publisher D | Science | 250 | $50 |","duration":1,"startTime":"2025-03-30T00:05:30.310372+05:30[Asia/Kolkata]","result":"SUCCESS","precondition":false,"level":1},{"number":18,"description":"When User submits the request to create a book","duration":1406,"startTime":"2025-03-30T00:05:30.311979+05:30[Asia/Kolkata]","result":"SUCCESS","precondition":false,"level":1,"children":[{"number":19,"description":"POST http://77.102.250.113:17354/api/v1/books","duration":0,"startTime":"2025-03-30T00:05:31.716326+05:30[Asia/Kolkata]","result":"SUCCESS","restQuery":{"method":"POST","path":"http://77.102.250.113:17354/api/v1/books","content":"{\n    \"testCaseName\": null,\n    \"id\": 0,\n    \"name\": \"Book D\",\n    \"author\": \"Author D\",\n    \"publication\": \"Publisher D\",\n    \"category\": \"Science\",\n    \"pages\": \"250\",\n    \"price\": \"$50\"\n}","contentType":"application/json","requestHeaders":"Accept\u003d*/*\n\t\t\t\tContent-Type\u003dapplication/json","requestCookies":"","responseHeaders":"Set-Cookie: JSESSIONID\u003dB3D63CEA62201192EFE97C0BE710AE59; Path\u003d/; HttpOnly\nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode\u003dblock\nCache-Control: no-cache, no-store, max-age\u003d0, must-revalidate\nPragma: no-cache\nExpires: 0\nX-Frame-Options: DENY\nContent-Type: application/json\nTransfer-Encoding: chunked\nDate: Sat, 29 Mar 2025 18:35:30 GMT\nConnection: close","responseCookies":"JSESSIONID\u003dB3D63CEA62201192EFE97C0BE710AE59;Path\u003d/;HttpOnly","responseBody":"{\n    \"timestamp\": \"2025-03-29T18:35:31.634+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/api/v1/books\"\n}","statusCode":400},"precondition":false,"level":2}]},{"number":20,"description":"Then The response status code should be 400","duration":0,"startTime":"2025-03-30T00:05:31.719020+05:30[Asia/Kolkata]","result":"SUCCESS","precondition":false,"level":1}]}],"userStory":{"id":"BooksAPICRUD","storyName":"Books API CRUD operations","displayName":"Books API CRUD operations","path":"BooksAPICRUD","pathElements":[{"name":"BooksAPICRUD","description":""}],"type":"feature"},"title":"Validate book creation with invalid price values","description":"","startTime":"2025-03-30T00:05:26.035148+05:30[Asia/Kolkata]","endTime":"2025-03-30T00:05:31.720551+05:30[Asia/Kolkata]","duration":3,"testFailureCause":{"errorType":"java.lang.AssertionError","message":"Response code mismatch expected:\u003c400\u003e but was:\u003c200\u003e","stackTrace":[{"declaringClass":"steps.BookAPISteps","methodName":"verifyResponseCode","fileName":"BookAPISteps.java","lineNumber":133},{"declaringClass":"stepdefinitions.BookStepDefinitions","methodName":"theResponseStatusCodeShouldBe","fileName":"BookStepDefinitions.java","lineNumber":103},{"declaringClass":"âœ½","methodName":"The response status code should be 400","fileName":"file:///Users/bharathpalanisamy/Documents/BooksAPITestAutomation/src/test/resources/features/BooksAPICRUD.feature","lineNumber":45}]},"testFailureClassname":"java.lang.AssertionError","testFailureMessage":"Response code mismatch expected:\u003c400\u003e but was:\u003c200\u003e","testFailureSummary":"FAILURE;java.lang.AssertionError;Response code mismatch expected:\u003c400\u003e but was:\u003c200\u003e;BookAPISteps.java","projectKey":"","isManualTestingUpToDate":false,"dataTable":{"headers":["name","author","publication","category","pages","price"],"rows":[{"values":["Book A","Author A","Publisher A","Fiction","200","ABC"],"lineNumber":49,"result":"SUCCESS"},{"values":["Book B","Author B","Publisher B","Non-Fiction","300","-10"],"lineNumber":50,"result":"FAILURE"},{"values":["Book C","Author C","Publisher C","Non-Fiction","300","8,698"],"lineNumber":51,"result":"SUCCESS"},{"values":["Book D","Author D","Publisher D","Science","250","$50"],"lineNumber":52,"result":"SUCCESS"}],"predefinedRows":true,"scenarioOutline":"Given User tries to create a book with the following details:\n\rWhen User submits the request to create a book\n\rThen The response status code should be 400\n\r","dataSetDescriptors":[{"startRow":0,"rowCount":0,"name":"","description":""}]},"manual":false,"testSource":"Cucumber","order":0,"result":"FAILURE","scenarioOutline":"Given User tries to create a book with the following details:\n|name | author | publication | category | pages | price|\n|\u003cname\u003e | \u003cauthor\u003e | \u003cpublication\u003e | \u003ccategory\u003e | \u003cpages\u003e | \u003cprice\u003e|\nWhen User submits the request to create a book\nThen The response status code should be 400"}